name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: # keine Files, nur simple values, welche dann in den verschiedenen Files verfügbar sind
      script-file: ${{ steps.publish.outputs.something }} #Wenn man den Output in den verschiedenen Jobs braucht, hier wird auf den steps context value zugegriffen
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish # die unique id braucht es um vom job aus auf den outbut von diesem Step zugreiffen zu können
        run: find dist/assets/*.js -type f -execdir echo 'something={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # path: | # where to find the files which should be stored. 
          #   dist 
          #   package.json 
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Arifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contetns
        run: ls
      - name: Output Filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
